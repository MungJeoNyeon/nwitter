{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","alt","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53642bcc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password); // eslint-disable-line no-unused-vars\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                    className=\"authInput authSubmit\"\r\n                    />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider); // eslint-disable-line no-unused-vars\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            required\r\n                            placeholder=\"Edit your nweet\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n\r\n        let attachmentUrl = \"\";\r\n\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\"> \r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }} alt=\"\"\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const newArray = snapshot.docs.map((document) => ({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                }));\r\n                setNweets(newArray);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n          />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}